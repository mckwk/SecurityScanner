import tkinter as tk
from datetime import datetime
from tkinter import ttk


class VulnerabilityDetailWindow:
    def __init__(self, parent, details):
        self.window = tk.Toplevel(parent)
        self.window.title(f"Details for {details['id']}")
        self.details = details
        self._setup_widgets()

    def _setup_widgets(self):
        self.window.geometry("600x500")

        frame = ttk.Frame(self.window, padding="10")
        frame.pack(fill=tk.BOTH, expand=True)

        published = self.format_date(self.details.get('published', 'Unknown'))
        last_modified = self.format_date(
            self.details.get('last_modified', 'Unknown'))

        self._add_label(
            frame,
            f"Device Name: {
                self.details.get(
                    'device_name',
                    'Unknown')}",
            "bold")
        self._add_label(frame, f"CVE ID: {self.details['id']}", "bold")
        self._add_label(frame, f"Published: {published}")
        self._add_label(frame, f"Last Modified: {last_modified}")
        self._add_label(frame, f"Severity: {self.details['severity']}")
        self._add_label(frame, f"Impact Score: {self.details['impact_score']}")
        self._add_label(
            frame, f"Exploitability Score: {
                self.details['exploitability_score']}")

        self._add_text(frame, "Description:",
                       self.details['description'], "bold")
        self._add_text(frame, "References:", "\n".join(
            self.details['references']), "bold")

    def _add_label(self, frame, text, font_weight="normal"):
        font = ("Arial", 12, font_weight)
        ttk.Label(frame, text=text, font=font).pack(pady=5)

    def _add_text(self, frame, label_text, content, font_weight="normal"):
        font = ("Arial", 12, font_weight)
        ttk.Label(frame, text=label_text, font=font).pack(pady=5)
        text_widget = tk.Text(frame, wrap=tk.WORD, height=5, width=70)
        text_widget.insert(tk.END, content)
        text_widget.config(state=tk.DISABLED)
        text_widget.pack(pady=5)

    def format_date(self, date_str):
        try:
            date = datetime.fromisoformat(date_str)
            return date.strftime("%Y-%m-%d %H:%M:%S")
        except ValueError:
            return date_str
